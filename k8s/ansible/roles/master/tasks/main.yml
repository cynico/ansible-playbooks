---
- name: Check if k8s network is already initialized.
  shell: 
    cmd: kubectl get nodes
  register: k8s_network_configuration
  ignore_errors: yes
  become: false

- name: Initializing the cluster.
  block:
    - name: Initiating the cluster.
      shell:
        cmd: "kubeadm init --apiserver-advertise-address={{ my_masters_list[0] }} --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=Mem"
      become: yes
      tags: tobeskipped

    - name: Registering the kubeadm join command.
      shell:
        cmd: kubeadm token create --print-join-command
      register: kubeadm_join_command
    
    - name: Setting the fact containing kubeadm_join_command to localhost.
      set_fact:
        kubeadm_join_command: "{{ kubeadm_join_command['stdout'] }}"
      run_once: true
      delegate_to: localhost
      delegate_facts: true

    - name: check user
      shell: "echo $HOME"
      become: false
      register: user_home
      tags: only
    
    - name: Create the $HOME/.kube directory
      file:
        path: "{{ user_home.stdout }}/.kube"
        state: directory
      become: false

    - name: Copying the admin.conf to the home directory.
      copy:
        remote_src: yes
        src: "/etc/kubernetes/admin.conf"
        dest: "{{ user_home.stdout }}/.kube/config"
        owner: "{{ ansible_env.USER }}" 
        group: "{{ ansible_env.USER }}"
      tags: only

    - name: Applying the flannel cni networking.
      shell:
       cmd: "kubectl apply -f https://raw.githubusercontent.com/cynico/flannel/master/Documentation/kube-flannel.yml"
      become: false
      tags: flannel
  when: k8s_network_configuration.stderr != ""
