---
- hosts: all
  become: yes

  handlers:
    - name: Load the new sysctl configuration
      shell:
        cmd: sysctl --system
    - name: Restart containerd
      service:
        name: containerd
        state: restarted

  tasks:
    - name: Ensure the hosts file exists on all nodes.
      lineinfile:
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        path: /etc/hosts
      with_items:
        - regexp: ".*master$" 
          line: "192.168.69.69 master"
        - regexp: ".*worker1$"
          line: "192.168.69.70 worker1"
        - regexp: ".*worker2$"
          line: "192.168.69.71 worker2"
      tags: hosts
    - name: "Setting up kernel modules configuration, and network configuration for both: containerd and k8s."
      block:  
        - name: Setting up kernel modules for containerd.
          copy:
            dest: /etc/modules-load.d/containerd.conf
            content: |
              overlay
              br_netfilter
          register: result_1

        - name: Starting up kernel modules for containerd.
          community.general.modprobe:
            name: "{{ item }}"
            state: present
          with_items:
            - overlay
            - br_netfilter
          register: result_2    

        - name: Setting up kubernetes network configuration.
          copy:
            dest: /etc/sysctl.d/99-kubernetes-cri.conf
            content: |
              net.bridge.bridge-nf-call-iptables = 1
              net.ipv4.ip_forward = 1
              net.bridge.bridge-nf-call-ip6tables = 1
          register: result_3

      always:
        - shell: sysctl --system
          when: (result_1.changed) or (result_2.changed) or (result_3.changed)

    - name: Run all waiting handlers.
      meta: flush_handlers

    # Block for installing and configuring our container runtime: containerd. 
    - name: Install and configure containerd.
      block:
        - apt:
            update_cache: yes
            cache_valid_time: 3600
            name: containerd
            state: present

        - file:
            path: /etc/containerd
            state: directory
        
        - stat:
            path: /etc/containerd/config.toml
          register: containerd_config_stat

        - shell:
            cmd: containerd config default | tee /etc/containerd/config.toml
          when: containerd_config_stat.stat.exists == false
      always:
        - service:
            name: containerd
            state: restarted
          when: containerd_config_stat.stat.exists == false

    - name: Run all waiting handlers.
      meta: flush_handlers

    - name: Disable swap.
      block:
        - shell: swapon --show
          register: swapon
          changed_when: false

        - shell: swapoff -a
          when: swapon.stdout != ""

        - lineinfile:
            path: /etc/fstab
            regexp: "^.*swap.*"
            state: absent
            
    # Block for installing and configuring k8s: kubectl, kubeadm and kubelet service.
    - name: Install and configure kubernetes.
      block:
        - name: Adding apt key. 
          apt_key:
            url: https://packages.cloud.google.com/apt/doc/apt-key.gpg 
            state: present

        - name: Appending appropriate source repos for kubernetes.
          copy:
            dest: /etc/apt/sources.list.d/kubernetes.list
            content: |
              deb https://apt.kubernetes.io/ kubernetes-xenial main
    
        - name: Install kubelet, kubeadm and kubectl
          apt:
            update_cache: yes
            name:
              - kubectl
              - kubeadm
              - kubelet
            state: present

        - name: Hold automatic updates for kubelet, kubeadm and kubectl.
          shell:
            cmd: apt-mark hold kubelet kubeadm kubectl
          register: hold_output
          changed_when: ("kubelet was already set on hold" not in hold_output.stdout) and ("kubeadm was already set on hold" not in hold_output.stdout) and ("kubectl was already set on hold" not in hold_output.stdtout)
          tags: hold
